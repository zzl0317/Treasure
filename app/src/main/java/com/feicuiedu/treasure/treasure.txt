项目初始导入的资源：百度地图的集成和登录注册模块
1. 自己去新建项目完成
2. 要想在下发的项目上直接进行开发：.git文件夹删了，把项目变成你自己的本地项目
3. 再需要我们的项目，需要再次克隆

现在导入的这些资源，只是代码给大家浏览和说明
资源导入之后
今天的任务：比较轻松的，主要就是项目的搭建
地理寻宝：核心的掌握的：百度地图的使用

今天的目标：
完成地图的展示、定位、指南针、地图状态、地图的缩放按钮

任务：
把今天的内容完全展示出来

总结：
1. 项目导入，项目资源
2. 前置：地图的展示
3. 定位：第一次进入自动移动、定位按钮的移动
   指南针：摆正地图的朝向
   地图的缩放：地图状态的更新


2016.11.11
今天的任务：
完成宝藏的数据获取及展示

1. 根据位置附近的1正方形区域获取宝藏

实现流程：
1. 使用Retrofit来进行网络请求
    1. 构建我们网络请求的接口
    2. 去执行请求
2. 使用MVP来进行项目的实现
    1. 单独的业务类实现数据的请求
    2. 视图的接口，Fragment具体实现视图
    3. 业务处理过程中和视图的交互

3. 百度地图标志物的添加和点击
    1. 拿到宝藏数据
    2. 遍历宝藏数据，在相应的经纬度的地方添加覆盖物Marker
    3. 添加覆盖物的点击事件，弹出InfoWindow

今日总结：
宝藏的数据获取和展示
1. Retrofit进行获取
    1. 根据地图位置的区域来动态获取：在地图状态的监听里面实时监测地图状态变化，
                                    根据变化的位置的区域来获取宝藏数据
    2. 接口构建
2. MVP模式：
    MapPresenter：业务类,来进行数据的获取
    MapMvpView:视图接口，视图的分析，
    Fragment：完成视图的具体实现
    业务类里面分析了业务过程中和视图的交互
    拿到请求的数据，交给视图来展示
3. 拿到数据之后展示
    1. 取出数据里面的宝藏信息，得到经纬度和id
    2. 在经纬度处添加Marker，并且设置了marker的点击事件
    3. 点击弹出Infowindow，设置了InfoWindow的点击事件，暂时未做处理，后面会完善

目标：
宝藏数据展示

预习:预习文档
视图方面的变化效果？
宝藏详情
埋藏宝藏

2016.11.14:
今天的任务：宝藏数据的完善和宝藏详情页面
1. 三种视图的切换
2. 完善宝藏点击的卡片展示
    完善卡片的数据展示：宝藏的标题、地址、距离我们的位置

3. 宝藏详情：从宝藏卡片点击跳转到宝藏详情页面
    1. 给宝藏卡片一个点击事件：跳转到宝藏详情页面
    2. 搭建宝藏详情页面
    3. 实现宝藏详情页面功能

总结：
1. *** 分析了一下宝藏数据展示的时候的视图切换
    三种视图：普通视图、宝藏选中视图、埋藏宝藏视图，控件的显示和隐藏实现
2. 点击宝藏marker和Infowindow : 切换视图？普通-->宝藏选中视图-->普通
3. *** 宝藏选中视图：展示了一个宝藏卡片，自定义的控件，对外提供了一个方法：主要展示宝藏的信息
4. 卡片的点击事件：跳转到宝藏详情页面，宝藏详情页面对外提供一个方法实现跳转
5. 宝藏详情页面：toolbar，地图的展示(死的地图)，宝藏卡片视图，宝物详情：通过Retrofit来获取的

今天的任务：
1. 实现宝藏详情页面的宝物详情数据的获取
2. 导航的实现

明天的任务：
埋藏宝藏的实现

今天的任务：
埋藏宝藏功能的实现
1. 侧滑的菜单中选择埋藏宝藏，显示埋藏宝藏的视图

2. **** 点击藏在这里，显示出一个宝藏标题录入卡片的视图
    1. 卡片上方显示的地址实时变化的：随着地图的移动（地图状态的变化）
        涉及到反地理编码：是在地图状态变化的时候发起的
    2. 卡片的点击事件：必须输入标题，跳转到埋藏宝藏详细页面
        埋藏宝藏详细页面对外提供一个open方法实现跳转

3. **** 埋藏宝藏详细页面：需要跳转时传递的数据：标题、地址、位置。。。。
    输入宝藏的描述（可以不输入）
    将宝藏的信息上传到服务器，完成埋藏宝藏的功能。

    1. 实现了toolbar的效果
    2. 选项菜单的布局实现

    Retrofit+MVP来进行宝藏的上传：埋藏宝藏
    1. 构建接口
    2. 执行请求
    3. MVP来进行
       1. 创建一个业务类，主要是进行数据上传的业务操作
       2. 分析视图的变化
       3. 执行业务过程中，处理业务和视图的交互

4. 埋藏成功之后,返回，改变地图的状态，重新获取宝藏数据

重点：百度地图里面的地理编码：地理编码，反地理编码
        地理编码(地址信息->经纬度)
        反地理编码请求(经纬度->地址信息)
        1. 创建
        geoCoder = GeoCoder.newInstance();
        2. 设置监听
        geoCoder.setOnGetGeoCodeResultListener(geoCoderResultListener);
        3. 去进行编码（反地理编码）
        // 设置反地理编码的位置
        ReverseGeoCodeOption option = new ReverseGeoCodeOption();
        option.location(target);
        // 发起反地理编码
        geoCoder.reverseGeoCode(option);

       多多练习：Retrofit + MVP










